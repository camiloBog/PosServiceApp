start nginx
nginx -s stop			fast shutdown
nginx -s quit			graceful shutdown
nginx -s reload		changing configuration, starting new worker processes with a new configuration, graceful shutdown of old worker processes
nginx -s reopen		re-opening log files


WildFly
user:	admin
pass:	admin

Base de Datos
user:	postgres
pass:	admin

standalone.bat --server-config=standalone-full.xml


Para configurar Wildfly, copiar la carpeta <<postgres>> en 
WILDFLY_HOME\modules\system\layers\base\org

Angular
	http://ngmodules.org/

Multitenant
	http://manikandan-k.github.io/2015/06/04/Multi_tenant_applications_in_jdbi.html
	http://zetcode.com/db/jdbi/
	
Rest
	http://cursoangularjs.es/doku.php?id=unidades:10_servidor:01_rest
	
	se usa POST para crear un recurso en el servidor
	se usa GET para obtener un recurso
	se usa PUT para cambiar el estado de un recurso o actualizarlo
	se usa DELETE para eleminar un recurso
	
	200 -> OK : Petición recibida y procesada de forma correcta
	201 -> Created : Petición completada. El resultado ha sido la creación de un nuevo recurso
	204 -> No Content: La petición es correcta, pero la respuesta no tiene ningún contenido
	401 -> Unauthorized: La información de autenticación no es válida
	404 -> Not found: El recurso no ha sido encontrado

NginX
	https://elbauldelprogramador.com/como-configurar-un-balanceador-de-carga-en-entornos-cloud/
	http://systemadmin.es/2012/04/balanceo-de-carga-con-nginx
	http://www.digitalvalley.com/blog/configurar-nginx-como-balanceador-de-carga/
	
	

  

